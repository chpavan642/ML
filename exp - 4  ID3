import pandas as pd
from sklearn.tree import DecisionTreeClassifier, export_text
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score
from sklearn.preprocessing import LabelEncoder

df = pd.read_csv("/content/sample_data/tennis.csv").apply(LabelEncoder().fit_transform)

X = df.drop('play', axis=1)
y = df['play']

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

clf = DecisionTreeClassifier(criterion='entropy', random_state=42)
clf.fit(X_train, y_train)

tree_rules = export_text(clf, feature_names=list(X.columns))
print("Decision Tree:\n", tree_rules)

new_sample = pd.DataFrame({'outlook': [0], 'temp': [1], 'humidity': [0], 'windy': [0]})
prediction = clf.predict(new_sample)

result = 'yes' if prediction[0] == 1 else 'no'
print(f"Prediction for the new sample: {result}")

accuracy = accuracy_score(y_test, clf.predict(X_test))
print(f"Accuracy on the test set: {accuracy * 100:.2f}%")
